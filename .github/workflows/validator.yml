name: pr_check
on: 
  pull_request:
    branches: main
 
jobs:
  pr-issues-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.2
      - run: echo '${{ toJSON(github) }}'
      - name: npm install
        run: npm install
      - id: pr-issues-validation
        run: |
          PULL_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          COMMITS=$(curl -s -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -H "Accept: application/vnd.github.v3+json" "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/pulls/${PULL_NUMBER}/commits")
          echo $COMMITS | jq -c '.[]' | while read commit; do
            COMMIT_SHA=$(echo $commit | jq '.sha')
            COMMIT_MESSAGE=$(echo $commit | jq '.commit.message')
            echo "Validating new commit: ${COMMIT_SHA} - ${COMMIT_MESSAGE}"
            if [[ "$COMMIT_MESSAGE" != *"AB"#""[0-9]""* ]]; then
                echo ""
                echo ""
                echo "Pull request contains invalid commit: ${COMMIT_SHA}. This commit lacks an AB#xxx in the message, in the expected format: AB#xxx -- failing operation."
                exit 1
            else echo "valid commit"
            fi

            # set WORKITEM equal to the number after the # in the commit message
            WORKITEM=`echo $COMMIT_MESSAGE | cut -d'#' -f2 | cut -d' ' -f1`
            echo "Workitem = $WORKITEM"
            
            # TODO PATCH request to add GitHub Pull Request link to work items 
            # TODO - figure out where GUID comes from in existing GitHub Pull Requests links from an AzDO work item

            # REPO_TOKEN=${{ github.token }} AZURE_DEVOPS_ORG=jjohanning0798 AZURE_DEVOPS_PAT=${{ secrets.AZURE_DEVOPS_PAT }} WORKITEMID=$WORKITEM PULLREQUESTID= node main.js
          done
